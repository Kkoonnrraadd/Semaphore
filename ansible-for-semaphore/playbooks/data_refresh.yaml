---
# DEPRECATED: This playbook is being replaced by self_service_refresh.yaml
# Use the new self_service_refresh.yaml playbook for enhanced functionality
# and integration with the SelfServiceRefresh PowerShell scripts

- name: data refresh (deprecated)
  hosts: localhost
  environment:
    AZURE_CONFIG_DIR: /home/semaphore/.azure
  vars:
    # Required Destination Information
    dest_cluster_name: aks-mnfro-intd-dev-weu
    dest_resource_group: rg-mnfro-intd-dev-weu
    dest_subscription_id: d602ec0b-96e4-44d2-8fb9-b79684a9489f
    dest_region_alias: dev
    # https://dev.azure.com/manufacturo/Manufacturo
    # This is the customer alias for updating the core database
    dest_customer_alias: dev
    # Require Source Information
    source_resource_group: rg-mnfro-intd-qa2-weu
    source_subscription_id: e02ef4b1-a554-4934-89ef-3db39ce3f374
    source_region_alias: qa2
    # For alerts
    hub_resource_group: rg-mnfro-hub-weu
    hub_subscription_id: a9261cc1-d170-491d-b8fa-23ef0ad88ba3
    # Context
    cloud_environment:  AzureCloud  # AzureUSGovernment
    terraform_env_path: public # sandbox_gov / usgovernment
  tasks:
    - name: Get AKS status
      include_role:
        name: azure_kubernetes
      vars:
        aks_action: "status"
        aks_cluster_name: "{{ dest_cluster_name }}"
        aks_resource_group: "{{ dest_resource_group }}"
        aks_subscription_id: "{{ dest_subscription_id }}"
      when: ansible_check_mode and ansible_verbosity >= 6 # Run when -vvvvvv or higher is used

    ##################################################
    # Preparation work:
    # * These steps don't require the destination cluster to go down
    # * Must ensure there is sufficient space on the source and destination
    #   to hold both the original and a -back or -restore database.
    ##################################################
    # - name: Create source restore for refresh
    #   include_role:
    #     name: azure_database
    #   vars:
    #     db_action: "create-source-restore"
    #     db_resource_group: "{{ source_resource_group }}"
    #     db_subscription_id: "{{ source_subscription_id }}"

    - name: Copy source restore to destination
      include_role:
        name: azure_database
      vars:
        log_file_path: "/tmp/my_long_script.log"
        pid_file_path: "/tmp/my_long_script_pid.txt"
        # Time in seconds for the script to potentially run
        max_script_runtime: 3600
        # Polling interval for checking script status (in seconds)
        status_check_interval: 10
        db_action: "copy-source-restore"
        source_db_resource_group: "{{ source_resource_group }}"
        source_db_subscription_id: "{{ source_subscription_id }}"
        dest_db_resource_group: "{{ dest_resource_group }}"
        dest_db_subscription_id: "{{ dest_subscription_id }}"

    # ##################################################
    # # Downtime starts:
    # # * cluster must be unavailable to prevent changes during copying
    # ##################################################
    # - name: Disable health alerts
    #   include_role:
    #     name: azure_monitor
    #   vars:
    #     alert_action: "disable"
    #     alert_region_alias: "{{ dest_region_alias }}"
    #     alert_resource_group: "{{ dest_resource_group }}"
    #     alert_subscription_id: "{{ dest_subscription_id }}"
    #     alert_hub_resource_group: "{{ hub_resource_group }}"
    #     alert_hub_subscription_id: "{{ hub_subscription_id }}"

    # - name: Stop AKS cluster
    #   include_role:
    #     name: azure_kubernetes
    #   vars:
    #     aks_action: "stop"
    #     aks_cluster_name: "{{ dest_cluster_name }}"
    #     aks_resource_group: "{{ dest_resource_group }}"
    #     aks_subscription_id: "{{ dest_subscription_id }}"

    # - name: Copy source sa containers to destination sa
    #   include_role:
    #     name: azure_storage
    #   vars:
    #     storage_action: "copy-storage-account-contents"
    #     source_storage_rg: "{{ source_resource_group }}"
    #     source_storage_subscription_id: "{{ source_subscription_id }}"
    #     dest_storage_rg: "{{ dest_resource_group }}"
    #     dest_storage_subscription_id: "{{ dest_subscription_id }}"

    # - name: Place refresh on service
    #   block:
    #     - name: Put '-restore' destination databases into service
    #       include_role:
    #         name: azure_database
    #       vars:
    #         db_action: "rename-destination-database"
    #         db_resource_group: "{{ dest_resource_group }}"
    #         db_subscription_id: "{{ dest_subscription_id }}"

    #     - name: Delete destination replica
    #       include_role:
    #         name: azure_database
    #       vars:
    #         db_action: "delete-destination-replica"
    #         db_resource_group: "{{ dest_resource_group }}"
    #         db_subscription_id: "{{ dest_subscription_id }}"

    #     - name: Adjust terraform configuration
    #       include_role:
    #         name: align-terraform-configuration
    #       vars:
    #         align_dest_subscription_id: "{{ dest_subscription_id }}"
    #         align_dest_region_alias: "{{ dest_region_alias }}"
    #         align_terraform_env_path: "{{ terraform_env_path }}"

    #     # 1. Run baselines
    #     # 2. Update core db for CORS
    #     # 3. Future Improvements (Fix AppConfig, Align db settings e.g. conn string)
    #     - name: Adjust runtime configuration
    #       include_role:
    #         name: align-runtime-configuration
    #       vars:
    #         align_source_subscription_id: "{{ source_subscription_id }}"
    #         align_dest_subscription_id: "{{ dest_subscription_id }}"
    #         align_dest_resource_group: "{{ dest_resource_group }}"
    #         align_source_region_alias: "{{ source_region_alias }}"
    #         align_dest_region_alias: "{{ dest_region_alias }}"
    #         align_dest_customer_alias: "{{ dest_customer_alias }}"
    #         align_terraform_env_path: "{{ terraform_env_path }}"

    #     ##################################################
    #     # Return to Service:
    #     # * Cluster is online and ready to be updated by services.
    #     # * Unavailable to customers until configuration stored in the
    #     #   db is updated by services.
    #     ##################################################
    #     - name: Start AKS cluster
    #       include_role:
    #         name: azure_kubernetes
    #       vars:
    #         aks_action: "start"
    #         aks_cluster_name: "{{ dest_cluster_name }}"
    #         aks_resource_group: "{{ dest_resource_group }}"
    #         aks_subscription_id: "{{ dest_subscription_id }}"

    #     - name: Enable health alerts
    #       include_role:
    #         name: azure_monitor
    #       vars:
    #         alert_action: "enable"
    #         alert_region_alias: "{{ dest_region_alias }}"
    #         alert_resource_group: "{{ dest_resource_group }}"
    #         alert_subscription_id: "{{ dest_subscription_id }}"
    #         alert_hub_resource_group: "{{ hub_resource_group }}"
    #         alert_hub_subscription_id: "{{ hub_subscription_id }}"
          
    #   rescue:
    #     - name: Log failure
    #       ansible.builtin.debug:
    #         msg: "ðŸš¨ Operation failed during refresh."

    #     - name: Raise alert
    #       ansible.builtin.debug:
    #         msg: "ðŸš¨ I would raise an alert to devops."

    #     - name: Rollback
    #       ansible.builtin.debug:
    #         msg: "ðŸš¨ I would rollback by shifting the -backup databases back onto service."
    #   always:
    #     - name: Adjust terraform configuration
    #       include_role:
    #         name: align-terraform-configuration
    #       vars:
    #         align_dest_subscription_id: "{{ dest_subscription_id }}"
    #         align_dest_region_alias: "{{ dest_region_alias }}"
    #         align_terraform_env_path: "{{ terraform_env_path }}"

    # ##################################################
    # # Downtime ends:
    # # * Remove any backups from destination
    # # * Remove any restores from the source
    # ##################################################
    # - name: Delete source restore
    #   include_role:
    #     name: azure_database
    #   vars:
    #     db_action: "delete-source-restore"
    #     db_resource_group: "{{ source_resource_group }}"
    #     db_subscription_id: "{{ source_subscription_id }}"

    # - name: Delete destination backup
    #   include_role:
    #     name: azure_database
    #   vars:
    #     db_action: "delete-destination-backup"
    #     db_resource_group: "{{ dest_resource_group }}"
    #     db_subscription_id: "{{ dest_subscription_id }}"