---
- name: Start destination environment
  block:
    - name: Display environment start information
      ansible.builtin.debug:
        msg: |
          ðŸš€ Starting Environment
          =======================
          Environment: {{ dest_env }} ({{ dest_ns }})
          Dry Run: {{ dry_run_mode | default(false) }}

    - name: Check if start environment script exists
      ansible.builtin.stat:
        path: "{{ role_path }}/files/6_start_environment"
      register: start_env_dir

    - name: Execute start environment script
      ansible.builtin.command: >
        pwsh -File {{ role_path }}/files/6_start_environment/StartEnvironment.ps1
        -environment "{{ dest_env }}"
        -namespace "{{ dest_ns }}"
        {{ '-DryRun' if (dry_run_mode | default(false)) else '' }}
      register: start_env_result
      changed_when: not (dry_run_mode | default(false))
      when: start_env_dir.stat.exists

    - name: Use Azure Kubernetes role as fallback
      ansible.builtin.include_role:
        name: azure_kubernetes
      vars:
        aks_action: "start"
        aks_cluster_name: "{{ dest_cluster | default('aks-mnfro-intd-' + dest_env + '-weu') }}"
        aks_resource_group: "{{ dest_rg | default('rg-mnfro-intd-' + dest_env + '-weu') }}"
        aks_subscription_id: "{{ dest_sub_id }}"
      when: not start_env_dir.stat.exists and not (dry_run_mode | default(false))

    - name: Display start environment result
      ansible.builtin.debug:
        var: start_env_result.stdout_lines
      when: start_env_result.stdout_lines is defined
