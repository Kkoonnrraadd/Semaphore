---
- name: Stop destination environment
  block:
    - name: Display environment stop information
      ansible.builtin.debug:
        msg: |
          ðŸ›‘ Stopping Environment
          =======================
          Environment: {{ dest_env }} ({{ dest_ns }})
          Dry Run: {{ dry_run_mode | default(false) }}

    - name: Check if stop environment script exists
      ansible.builtin.stat:
        path: "{{ role_path }}/files/1_stop_environment"
      register: stop_env_dir

    - name: Check if PowerShell is available
      ansible.builtin.command: which pwsh
      register: pwsh_check
      failed_when: false
      changed_when: false

    - name: Execute stop environment script (if PowerShell available)
      ansible.builtin.command: >
        pwsh -File {{ role_path }}/files/1_stop_environment/StopEnvironment.ps1
        -environment "{{ dest_env }}"
        -namespace "{{ dest_ns }}"
        {{ '-DryRun' if (dry_run_mode | default(false)) else '' }}
      register: stop_env_result
      changed_when: not (dry_run_mode | default(false))
      when: stop_env_dir.stat.exists and pwsh_check.rc == 0
      failed_when: false

    - name: Use Azure Kubernetes role as fallback
      ansible.builtin.include_role:
        name: azure_kubernetes
      vars:
        aks_action: "stop"
        aks_cluster_name: "{{ dest_cluster | default('aks-mnfro-intd-' + dest_env + '-weu') }}"
        aks_resource_group: "{{ dest_rg | default('rg-mnfro-intd-' + dest_env + '-weu') }}"
        aks_subscription_id: "{{ dest_sub_id }}"
      when: (not stop_env_dir.stat.exists or pwsh_check.rc != 0) and not (dry_run_mode | default(false))

    - name: Display stop environment result
      ansible.builtin.debug:
        var: stop_env_result.stdout_lines
      when: stop_env_result.stdout_lines is defined
