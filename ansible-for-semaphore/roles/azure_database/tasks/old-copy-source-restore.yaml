---
# tasks/copy-source-restore.yaml
- name: Copy copy_database.ps1 script to a temporary location
  ansible.builtin.copy:
    src: copy_database.ps1
    dest: "/tmp/copy_database.ps1"
    mode: '0755' # Make it executable
  delegate_to: localhost

# TODO: this needs to ensure there is enough space in the destination storage to have two databases around
# - name: (Copy Source Restore) Execute copy_database.ps1 script
#   ansible.builtin.command: >
#     pwsh /tmp/copy_database.ps1
#     -Cloud {{ cloud_environment }}
#     -SourceResourceGroup {{ source_db_resource_group }}
#     -SourceSubscriptionId {{ source_db_subscription_id }}
#     -DestinationResourceGroup {{ dest_db_resource_group }}
#     -DestinationSubscriptionId {{ dest_db_subscription_id }}
#     {% if ansible_check_mode %}-DryRun{% endif %}
#   args:
#     chdir: /tmp # Run from /tmp
#   delegate_to: localhost
#   register: result
#   failed_when: result.rc != 0
#   changed_when: result.rc == 0
  
# - name: Display result
#   ansible.builtin.debug:
#     var: result.stdout_lines
#   when: ansible_verbosity >= 2 # Run when -vv or higher is used
